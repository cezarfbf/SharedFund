// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SharedFund.Persistence;

namespace SharedFund.Migrations
{
    [DbContext(typeof(SharedFundContext))]
    [Migration("20191005221550_InitSeedTables")]
    partial class InitSeedTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SharedFund.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("Name");

                    b.Property<double>("Salary");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            BirthDate = new DateTime(2019, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mark Zaruch",
                            Salary = 200000.32000000001
                        },
                        new
                        {
                            Id = 101,
                            BirthDate = new DateTime(2019, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "John Slavikov",
                            Salary = 1350.2
                        },
                        new
                        {
                            Id = 102,
                            BirthDate = new DateTime(2019, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Eduardo Cerqueira",
                            Salary = 58483.980000000003
                        },
                        new
                        {
                            Id = 103,
                            BirthDate = new DateTime(2019, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Andre Ariano",
                            Salary = 52483.580000000002
                        });
                });

            modelBuilder.Entity("SharedFund.Models.FundAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId");

                    b.Property<double>("Entry");

                    b.Property<DateTime>("EntryDate");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("FundAccounts");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            EmployeeId = 100,
                            Entry = 16000.0,
                            EntryDate = new DateTime(2019, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 101,
                            EmployeeId = 100,
                            Entry = 16000.0,
                            EntryDate = new DateTime(2019, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 102,
                            EmployeeId = 101,
                            Entry = 108.01000000000001,
                            EntryDate = new DateTime(2019, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 103,
                            EmployeeId = 101,
                            Entry = 108.01000000000001,
                            EntryDate = new DateTime(2019, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 104,
                            EmployeeId = 101,
                            Entry = 108.01000000000001,
                            EntryDate = new DateTime(2019, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 105,
                            EmployeeId = 102,
                            Entry = 4678.7200000000003,
                            EntryDate = new DateTime(2019, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 106,
                            EmployeeId = 102,
                            Entry = 4678.7200000000003,
                            EntryDate = new DateTime(2019, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 107,
                            EmployeeId = 102,
                            Entry = 4678.7200000000003,
                            EntryDate = new DateTime(2019, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 108,
                            EmployeeId = 103,
                            Entry = 4198.6800000000003,
                            EntryDate = new DateTime(2019, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 109,
                            EmployeeId = 103,
                            Entry = 4198.6800000000003,
                            EntryDate = new DateTime(2019, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 110,
                            EmployeeId = 103,
                            Entry = 4198.6800000000003,
                            EntryDate = new DateTime(2019, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 111,
                            EmployeeId = 103,
                            Entry = -3549.75,
                            EntryDate = new DateTime(2019, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SharedFund.Models.WithdrawaRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BalanceFrom");

                    b.Property<double>("BalanceTo");

                    b.Property<double>("FixedMoney");

                    b.Property<int>("PercentageLimit");

                    b.HasKey("Id");

                    b.ToTable("WithdrawalsRules");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            BalanceFrom = 0.0,
                            BalanceTo = 500.0,
                            FixedMoney = 0.0,
                            PercentageLimit = 50
                        },
                        new
                        {
                            Id = 101,
                            BalanceFrom = 500.00999999999999,
                            BalanceTo = 1000.0,
                            FixedMoney = 50.0,
                            PercentageLimit = 40
                        },
                        new
                        {
                            Id = 102,
                            BalanceFrom = 1000.01,
                            BalanceTo = 5000.0,
                            FixedMoney = 150.0,
                            PercentageLimit = 30
                        },
                        new
                        {
                            Id = 103,
                            BalanceFrom = 5000.0100000000002,
                            BalanceTo = 10000.0,
                            FixedMoney = 650.0,
                            PercentageLimit = 20
                        },
                        new
                        {
                            Id = 104,
                            BalanceFrom = 10000.01,
                            BalanceTo = 15000.0,
                            FixedMoney = 1150.0,
                            PercentageLimit = 15
                        },
                        new
                        {
                            Id = 105,
                            BalanceFrom = 15000.01,
                            BalanceTo = 20000.0,
                            FixedMoney = 1900.0,
                            PercentageLimit = 10
                        },
                        new
                        {
                            Id = 106,
                            BalanceFrom = 20000.009999999998,
                            BalanceTo = -1.0,
                            FixedMoney = 2900.0,
                            PercentageLimit = 5
                        });
                });

            modelBuilder.Entity("SharedFund.Models.FundAccount", b =>
                {
                    b.HasOne("SharedFund.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
